@startuml
left to right direction

@enduml


'类图
@startuml
annotation Aspect {
}
annotation Pointcut{
    +execution()  // 匹配方法签名
}

note left of Aspect : 声明切面
note top of Pointcut : 定义切入点

interface Advice

@enduml

@startuml
left to right direction

:User: --> (Pointcut):声明
:User: --> (Advice):声明
(Pointcut) <-- (Aspect) : 修饰
(Advice) <-- (Aspect) : 修饰
(Advice) --> (Pointcut):使用

note bottom of Aspect : 在Pointcut和Advice类上声明
note top of Pointcut : 声明切点
note bottom of Advice : 指定切点的切入规则:before,after,around

@enduml

'使用AOP时序图
@startuml
start
:添加切入点T;
note left
@Pointcut(xxx)
public void foo( )
end note
split
    :使用beanName定义;
note left
    1.0支持
end note
split again
    :使用package name定义;
    note left
    2.0支持
    end note
end split
:编写切面 P;
note left
public void log(){
    // 切入代码
}
end note
:定义切入规则;
note left
log方法上添加注解
end note

partition 3种可选类型{
    split
        :@Before;
        note left
        在目标点之前执行切面P
        1.0支持
        end note
    split again
        :@After;
        note left
        在目标点之后执行切面P
        1.0支持
        end note
    split again
        :@Around;
        note right
        在目标点前后都执行切面P
        2.0支持
        end note
    split end
}

:为切面配置切入点;
note left
在切入规则注解中添加@Before("com.src.xxx")
既T的路径
end note

end


@enduml